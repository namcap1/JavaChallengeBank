package Bank;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class AccountOpenTest {
    @Test void accountOpenShouldBeDefaultFalse(){
        AccountOpen classUnderTest = new AccountOpen();
        assertEquals(classUnderTest.getOpen(), false);
    }
    @Test void canOpenAnAccount(){
        AccountOpen classUnderTest = new AccountOpen();
        try{
            classUnderTest.setOpen();
            assertEquals(classUnderTest.getOpen(), true);
        }catch(Exception e){
            System.err.println(e);
        }
    }
    @Test void cannotOpenAnAlreadyOpenedAccount(){
        AccountOpen classUnderTest = new AccountOpen();
        Throwable exception = assertThrows(Exception.class, () -> {
            classUnderTest.setOpen();
            classUnderTest.setOpen();
        });
        assertEquals("Account is already opened", exception.getMessage());
    }
    @Test void cannotCloseAnAlreadyClosedAccount(){
        AccountOpen classUnderTest = new AccountOpen();
        Throwable exception = assertThrows(Exception.class, () -> {
            classUnderTest.setClose();
        });
        assertEquals("No account is open", exception.getMessage());
    }
    @Test void canCloseAnAccount(){
        AccountOpen classUnderTest = new AccountOpen();
        try {
            classUnderTest.setOpen();
            classUnderTest.setClose();
            assertEquals(classUnderTest.getOpen(), false);
        } catch (Exception e) {
            System.err.println(e);
        }
    }
}
